---
- name: Deploy to EC2
  hosts: localhost
  connection: local
  vars:
    aws_access_key: "{{ secrets.AWS_ACCESS_KEY }}"
    aws_secret_key: "{{ secrets.AWS_SECRET_KEY }}"
    aws_security_token: "{{ secrets.AWS_SESSION_TOKEN }}"

  tasks:
    - name: Launch EC2 Instance
      ec2_instance:
        instance_type: t2.medium
        image_id: ami-04e5276ebb8451442
        region: us-east-1
        key_name: Test
        vpc_subnet_id: subnet-0d981110c7439013c
        tags:
          Name: Eshop
        count: 1
        network:
          assign_public_ip: yes
        wait: yes
        security_groups: [eshop]
        aws_access_key: "{{ secrets.AWS_ACCESS_KEY }}"
        aws_secret_key: "{{ secrets.AWS_SECRET_KEY }}"
        security_token: "{{ secrets.AWS_SESSION_TOKEN }}"
      register: ec2_instance_result

    - name: Delete previous EC2 Instances
      ec2_instance:
        region: us-east-1
        aws_access_key: "{{ secrets.AWS_ACCESS_KEY }}"
        aws_secret_key: "{{ secrets.AWS_SECRET_KEY }}"
        security_token: "{{ secrets.AWS_SESSION_TOKEN }}"
        instance_ids: "{{ ec2_instance_result.instances | map(attribute='instance_id') | list }}"
        state: absent

    - name: Add instance host to group
      add_host:
        hostname: "{{ item.public_ip_address }}"
        groupname: launched
      loop: "{{ ec2_instance_result.instances }}"

    - name: Wait for SSH connection
      wait_for_connection:
        delay: 30
        timeout: 300
      loop_control:
        loop_var: item
      loop: "{{ ec2_instance_result.instances }}"

- name: Configure EC2 Instances
  hosts: launched
  connection: ssh
  become: yes

  tasks:
    - name: Install Git and Docker
      package:
        name:
          - git
          - docker
        state: latest
        update_cache: yes

    - name: Start Docker
      service:
        name: docker
        state: started
        enabled: yes

    - name: Add ec2-user to Docker group
      user:
        name: ec2-user
        groups: docker
        append: true

    - name: Fetch eshop from Git
      git:
        repo: 'https://github.com/nativesixs/4IT572_docker.git'
        dest: ./app
    
    - name: Build Eshop Docker image
      docker_image:
        build:
          path: ./app
        name: eshop
        tag: latest
    
    - name: Run Eshop Docker container
      docker_container:
        name: eshop
        image: eshop
        state: started
        ports:
          - "80:3000"

    - name: Wait for Eshop to be accessible
      wait_for:
        port: 80
